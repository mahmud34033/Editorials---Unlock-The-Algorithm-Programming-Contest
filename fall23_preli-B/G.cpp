// This solution generated by ChatGPT

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int minRemovalsToMakeEqual(const string& s1, const string& s2) {
    int n = s1.length();
    int m = s2.length();

    // Initialize a vector to store the lengths of the longest common subsequence
    vector<int> dp(m + 1, 0);

    // Calculate the lengths of longest common subsequence
    for (int i = 1; i <= n; ++i) {
        int prev = 0;
        for (int j = 1; j <= m; ++j) {
            int temp = dp[j];
            if (s1[i - 1] == s2[j - 1]) {
                dp[j] = 1 + prev;
            } else {
                dp[j] = max(dp[j], dp[j - 1]);
            }
            prev = temp;
        }
    }

    // Minimum number of characters to remove = total characters - length of longest common subsequence
    return (n + m - 2 * dp[m]);
}

int main() {
    string s1, s2;
    // cout << "Enter the first string: ";
    cin >> s1;
    // cout << "Enter the second string: ";
    cin >> s2;

    int minRemovals = minRemovalsToMakeEqual(s1, s2);
    // cout << "Minimum number of characters to remove to make the strings equal: " << minRemovals << endl;
    cout << "Minimum number of characters to remove to make the strings equal: " << minRemovals << endl;

    return 0;
}
